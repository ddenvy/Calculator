name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '6.0.405'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build solution
        run: dotnet build --configuration Release

      - name: Run tests
        run: dotnet test --no-build --verbosity normal

  deploy:
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      # Шаг 1: Сборка Docker-образа с использованием buildah-build
      - name: Build Docker image
        id: build-image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ secrets.DOCKER_USERNAME }}/calculator-app
          tags: latest
          dockerfiles: |
            ./.dockerfile

      # Шаг 2: Пуш Docker-образа в Docker Hub
      - name: Push Docker image to Docker Hub
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build-image.outputs.image }}
          tags: ${{ steps.build-image.outputs.tags }}
          registry: docker.io
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Шаг 3: Деплой на удаленный хост через Docker
      - name: Deploy to remote host
        run: |
          ssh ${{ secrets.REMOTE_HOST_USER }}@${{ secrets.REMOTE_HOST }} "docker pull ${{ secrets.DOCKER_USERNAME }}/calculator-app:latest && docker run -d --name calculator-app -p 80:80 ${{ secrets.DOCKER_USERNAME }}/calculator-app:latest"